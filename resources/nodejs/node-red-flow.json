[
    {
        "id": "6273791333c6b793",
        "type": "tab",
        "label": "Gasmeter",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b5d0306cb8218415",
        "type": "mqtt in",
        "z": "6273791333c6b793",
        "name": "",
        "topic": "gasmeter/live",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "6afada7d.a0881c",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "0694f12b11ed8948",
                "8fd92bc22874ad3e"
            ]
        ]
    },
    {
        "id": "0694f12b11ed8948",
        "type": "debug",
        "z": "6273791333c6b793",
        "name": "Gasmeter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 140,
        "wires": []
    },
    {
        "id": "56ca5953bebedc17",
        "type": "debug",
        "z": "6273791333c6b793",
        "name": "Postgres",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 140,
        "wires": []
    },
    {
        "id": "8fd92bc22874ad3e",
        "type": "function",
        "z": "6273791333c6b793",
        "name": "",
        "func": "msg.payload.time = new Date(msg.payload.time).toISOString();\nconst values = Object.values(msg.payload);\n\nmsg.query = {\n    text: \"INSERT INTO live (sensor_id, time, volume, state, plan_id) VALUES (1, $1, $2, $3, (SELECT id FROM plan WHERE rate = $4 AND price = $5 AND factor = $6));\",\n    values: values\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 220,
        "wires": [
            [
                "56ca5953bebedc17",
                "aba669eb6fe50364"
            ]
        ]
    },
    {
        "id": "aba669eb6fe50364",
        "type": "digitaloak-postgresql-query",
        "z": "6273791333c6b793",
        "name": "",
        "server": "87530e4c5b462285",
        "inputs": 1,
        "outputs": 0,
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "a8ee493c36d2fba3",
        "type": "mqtt in",
        "z": "6273791333c6b793",
        "name": "",
        "topic": "gasmeter/status",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "6afada7d.a0881c",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 400,
        "wires": [
            [
                "88d52b6edb6eb83f",
                "ecd9ca63e1a4ec39"
            ]
        ]
    },
    {
        "id": "96d979c770f47d43",
        "type": "debug",
        "z": "6273791333c6b793",
        "name": "Email",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "c69fe6948283144d",
        "type": "e-mail",
        "z": "6273791333c6b793",
        "server": "mail.ahpohl.com",
        "port": "587",
        "secure": false,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 650,
        "y": 400,
        "wires": []
    },
    {
        "id": "88d52b6edb6eb83f",
        "type": "function",
        "z": "6273791333c6b793",
        "name": "",
        "func": "var payload = msg.payload;\nvar alarm_flag = context.get(\"alarm_flag\");\nif (typeof alarm_flag == \"undefined\")\n{\n  alarm_flag = false;\n}\nmsg.to = \"admin@ahpohl.com\";\nmsg.from = \"noreply@ahpohl.com\";\nmsg.priority = \"high\";\nvar date = new Date();\n\nif (payload == \"online\" && alarm_flag)\n{\n    alarm_flag = false;\n    msg.alarm = 0;\n    context.set(\"alarm_flag\", alarm_flag);\n    msg.topic = \"Gasmeter is online\"\n    msg.payload = \"Online event at \" + date;\n    return msg;\n}\n\nif (payload == \"offline\" && !alarm_flag)\n{\n    alarm_flag = true;\n    msg.alarm = 1;\n    context.set(\"alarm_flag\", alarm_flag);\n    msg.topic = \"Gasmeter is offline\"\n    msg.payload = \"Offline event at \" + date;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 400,
        "wires": [
            [
                "96d979c770f47d43"
            ]
        ]
    },
    {
        "id": "ecd9ca63e1a4ec39",
        "type": "debug",
        "z": "6273791333c6b793",
        "name": "Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 320,
        "wires": []
    },
    {
        "id": "6afada7d.a0881c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "87530e4c5b462285",
        "type": "digitaloak-postgresql-connection-manager",
        "name": "localhost:5432/gasmeter",
        "host": "localhost",
        "port": "5432",
        "database": "gasmeter",
        "tls": "",
        "use_tls": false,
        "pool_max_clients": "10",
        "pool_client_max_idle": "10000",
        "client_query_timeout": "",
        "client_statement_timeout": "",
        "client_connection_timeout_millis": "",
        "is_client_enabled": "1"
    }
]